# Superb Questions From 2D Arrays
=================================

1. Program to find the maximum element in a 2D array. 

2. Program to calculate the sum of elements in a selected submatrix from a 2D array. The user inputs the matrix dimensions, 
the elements, and the submatrix range.

3. Program to find and print the row number that has the maximum sum in a given matrix.

4. Program to find the row with the maximum number of 1s in a binary matrix.

5. Program to transpose a square matrix (n × n) in-place. (LeetCode-867)
    Example (rows/cols = 3):
    Input Matrix:           Transposed Matrix:
    1   2   3               1   4   7
    4   5   6               2   5   8
    7   8   9               3   6   9

6. Program to rotate a square matrix 90° clockwise in-place using a while loop.
    Example (rows/cols = 3)
    Input Matrix:           90° clockwise rotated Matrix:
    1   2   3               7   4   1
    4   5   6               8   5   2
    7   8   9               9   6   3

7. Program to multiply two matrices entered by the user.

8. In-place program to transform a given matrix (n × m) by reversing elements of every odd-indexed row.
    Example (rows = 3, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               1   2   3   4
    5   6   7   8               8   7   6   5
    9   10  11  12              9   10  11  12

9. Program to print a given matrix (n × m) in even-indexed column-wise wave form.
    Example (rows = 3, cols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               9   5   1
    5   6   7   8               2   6   10
    9   10  11  12              11  7   3
                                4   8   12

10. In-place program to transform a given matrix (n × m) by reversing the order of rows (vertical flip).
    Example (rows = 3, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               9   10  11  12
    5   6   7   8               5   6   7   8
    9   10  11  12              1   2   3   4

11. In-place program to transform a given square matrix (n × n) by reversing elements of every even-indexed column.
    Example (rows = 3, cols = 3):
    Input Matrix:               Transformed Matrix:
    1   2   3                   7   2   9
    4   5   6                   4   5   6
    7   8   9                   1   8   3

12. Program to print a given matrix (n × m) in odd-indexed column-wise wave form.
    Example (rows = 3, cols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               4   8   12
    5   6   7   8               11  7   3
    9   10  11  12              2   6   10
                                9   5   1

13. In-place program to transform a given square matrix (n × n) by reversing elements of every odd-indexed column.
    Example (rows = 4, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               1   8   3   12
    5   6   7   8               5   6   7   8
    9   10  11  12              9   10  11  4
    13  14  15  16              13  2   15  16

14. Given an n × m matrix, print all elements of the matrix in spiral order. (LeetCode-54)
    Example (rows = 5, cols = 6):
    Input Matrix:                        
    1   2   3   4   5   6
    7   8   9   10  11  12
    13  14  15  16  17  18
    19  20  21  22  23  24
    25  26  27  28  29  30

    Output (spiral order):
    1 2 3 4 5 6 12 18 24 30 29 28 27 26 25 19 13 7 8 9 10 11 17 23 22 21 20 14 15 16

15. Give a positive integer n, generate a square(n*n) matrix filled with elements from 1 to n*n in spiral order.
(Leetcode-59)
Example (rows = 5, cols = 6)
Input Matrix:                           Generated Matrix:
1  2   3   4   5   6                    1   2   3   4   5   6
7  8   9   10  11  12                   18  19  20  21  22  7
13 14  15  16  17  18                   17  28  29  30  23  8
19 20  21  22  23  24                   16  27  26  25  24  9
25 26  27  28  29  30                   15  14  13  12  11  10