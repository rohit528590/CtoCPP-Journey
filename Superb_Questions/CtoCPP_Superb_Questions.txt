# Superb Questions From Basics
==============================

1. Program to calculate the perimeter of a rectangle when length and breadth are given by the user.

2. Program to calculate the percentage for 5 subjects, considering marks out of 100 for each subject.

3. Program to calculate simple interest when principal, rate, and time are given by the user.

4. Program to find the remainder when a dividend is divided by a divisor, without using the modulus (%) operator.

5. Program to find the remainder when a dividend is divided by a divisor, using the modulus (%) operator.

6. Program to print half of a given number.

7. Program to take a float input and print the fractional part of the real number.

8. Program to calculate the volume of a cylinder given its radius and height.

9. Program to calculate the volume of a sphere when the radius is given by the user.

10. Program to convert temperature from Celsius to Fahrenheit.

11. Program to convert temperature from Fahrenheit to Celsius.

12. Program to convert temperature from Fahrenheit to Kelvin.

13. Program to convert temperature from Kelvin to Fahrenheit.


# Superb Questions From If-Else
===============================

1. Program to check if a given character is a digit.

2. Program to determine whether a character entered by the user is lowercase.

3. Program to check if a given dividend is divisible by a given divisor.

4. Program to determine if a given positive integer is divisible by both 5 and 3 without using nested if statements.

5. Program to determine if a given positive integer is divisible by 5 or 3 but not divisible by 15 using nested if statements.

6. Program to determine if a given positive integer is divisible by 5 or 3 but not divisible by 15 using logical operators.

7. Program to determine whether the seller has made a profit or incurred a loss.
    Also calculate the amount of profit made or loss incurred.

8. Program to determine if 3 numbers can form the sides of a triangle using logical operators.

9. Program to determine whether the year is a leap year or not. (Consider that leap years occur every 4 years)

10. Program to taking a student's percentage as input and print the corresponding grade using nested if statements:
    • 90 - 100: Excellent
    • 80 - 89: Very Good
    • 70 - 79: Good
    • 60 - 69: Can Do Better
    • 50 - 59: Average
    • 40 - 49: Below Average
    • Below 40: Fail

11. Calculate the income tax paid by an employee to the government according to the following tax slabs:
    Income Slab          Tax Rate
    2.5L - 5.0L         5%
    5.0L - 10.0L        20%
    Above 10.0L         30%

12. Program to determine whether a student has passed or failed. To pass, a student requires a total of 40% and at least 33% in each subject.
    Assume there are three subjects with a maximum of 100 marks in each subject. Take the marks as input from the user.

13. If the ages of Ram, Shyam, and Ajay are input through the keyboard, write a program to determine,
    the youngest of the three using logical operators and nested if statements.

14. Program to find the maximum of two numbers.

15. Program to find the greatest among four numbers entered by the user using the max/min algorithm.


# Superb Questions From Loops
=============================

1. Program to print all even numbers within a given range.

2. Program to print all even numbers within a given range.

3. Program to print all ASCII values and their equivalent characters from 'A' to 'Z'
    (characters can be uppercase or lowercase as specified by user) using a for loop.

4. Program to calculate the factorial of a given number.

5. Program to print the factorial of all numbers within a given range.

6. Program to print the nth term of the Fibonacci series.

7. Program to print the Fibonacci series from the first term to the nth term.

8. Program to display the arithmetic progression: 1, 3, 5, 7, 9, ... up to 'n' terms.

9. Program to display the geometric progression: 100, 50, 25, ... up to 'n' terms.

10. Program to display the arithmetic progression: 100, 97, 94, ... down to the last positive term, with 'n' starting terms.

11. Program to calculate the result of raising one number to the power of another.

12. Program to check if a number is prime or composite.

13. Program to print all prime numbers within a given range.

14. Program to calculate the sum of the series: 1 - 2 + 3 - 4 + 5 - 6 + ... up to 'n' terms.

15. Program to count the digits of a given number.

16. Program to print the reverse of a given number.

17. Program to calculate the sum of digits of a given number.

18. Program to print the sum of a number 'n' and its reverse.

19. Program to continuously take input from the user until a number that is a multiple of 7 is entered.

20. Program to check whether a given number is a palindrome.

21. Program to check if the number entered by the user is an Armstrong number.

22. Program to print all Armstrong numbers between R (starting value) and S (ending value) as given by the user.


# Superb Questions From Pattern Printing
========================================

1. Rectangle Pattern with Asterisks
Program to print a rectangle pattern using asterisks.
Example : rows = 3, columns = 4
Expected Output:
* * * * *
* * * * *
* * * * * 

2. Square Number Pattern
Program to print a square pattern using consecutive numbers.
Example : dimension = 4
Expected Output:
1 2 3 4
1 2 3 4
1 2 3 4

3. Left-Aligned Triangle Number Pattern
Program to print a left-aligned triangle pattern using consecutive numbers.
Example : rows = 4
Expected Output:
1
1 2
1 2 3
1 2 3 4

4. Left-Aligned Inverted Triangle Number Pattern
Program to print a left-aligned inverted triangle pattern using consecutive numbers.
Example : rows = 4
Expected Output:
1 2 3 4
1 2 3
1 2
1

5. Alternating Numeric-Alphabetic Triangle Pattern
Program to print a triangle pattern alternating between numbers and alphabets.
Example : rows = 5
Expected Output:
1
A B
1 2 3
A B C D
1 2 3 4 5

6. Plus (+) Sign Pattern
Program to print a plus (+) sign pattern using asterisks.
Note: The number of rows must be an odd number provided by the user.
Example : rows = 5
Expected Output:
_ _ * _ _
_ _ * _ _
* * * * *
_ _ * _ _
_ _ * _ _

7. Hollow Rectangle Pattern
Program to print a hollow rectangle pattern using asterisks.
Example : rows = 4, columns = 5
Expected Output:
* * * * * *
* _ _ _ _ *
* _ _ _ _ *
* * * * * *

8. X Pattern with Stars
Program to print an 'X' pattern using asterisks.
Note: The number of rows must be an odd number provided by the user.
Example : rows = 5
Expected Output:
* _ _ _ *
_ * _ * _
_ _ * _ _
_ * _ * _
* _ _ _ *

9. Floyd's Triangle Pattern (Numbers)
Program to print Floyd's triangle pattern using consecutive numbers.
Example : rows = 4
Expected Output:
1
2 3
4 5 6
7 8 9 10

10. Alternating Binary Triangle Pattern
Program to print the following alternating binary triangle pattern:
Example : rows = 4
Expected Output:
1
0 1
1 0 1
0 1 0 1

11. Left-Aligned Rhombus Pattern
Program to print a left-aligned rhombus pattern using asterisks.
Example : rows = 4
Expected Output:
_ _ _ * * * *
_ _ * * * *
_ * * * *
* * * *

12. Right-Aligned Triangle Alphabet Pattern
Program to print a right-aligned triangle pattern using consecutive alphabets.
Example : rows = 4
Expected Output:
_ _ _ A
_ _ A B
_ A B C
A B C D

13. Centered Star Pyramid Pattern
Program to print a centered pyramid pattern using asterisks.
Example : rows = 4
Expected Output:
_ _ _ *
_ _ * * *
_ * * * * *
* * * * * * *

14. Centered Numerical Pyramid Pattern
Program to print a centered pyramid pattern using consecutive numbers.
Example : rows = 4
Expected Output:
_ _ _ 1
_ _ 1 2 3
_ 1 2 3 4 5
1 2 3 4 5 6 7

15. Centered Alphabetical Palindrome Pyramid
Program to print a centered palindromic pyramid pattern using alphabets.
Example : rows = 4
Expected Output:
_ _ _ A
_ _ A B A
_ A B C B A
A B C D C B A

16. Symmetric Diamond Star Pattern
Program to print a symmetric diamond pattern using asterisks.
Example : rows = 4
Expected Output:
_ _ _ *
_ _ * * *
_ * * * * *
* * * * * * *
_ * * * * *
_ _ * * *
_ _ _ *

17. Alphabet Pattern with Central Gap
Write a program to print alphabets with a central gap pattern:
Example : rows = 4
Expected Output:
A B C D E F G
A B C _ E F G
A B _ _ _ F G
A _ _ _ _ _ G

18. Symmetric Hollow Pyramid (Numbers)
Program to print a symmetric hollow pyramid using numbers:
Example : rows = 4
Expected Output:
1 2 3 4 3 2 1
1 2 3 _ 3 2 1
1 2 _ _ _ 2 1
1 _ _ _ _ _ 1

19. Left-Triangle Increasing Mirror Pattern
Program to print a left-triangle increasing mirror pattern for a given size:
Example : size = 7
Expected Output:
1 1 1 1 1 1 1
1 2 2 2 2 2 2
1 2 3 3 3 3 3
1 2 3 4 4 4 4
1 2 3 4 5 5 5
1 2 3 4 5 6 6
1 2 3 4 5 6 7

20. Diamond Number Pattern (Symmetric)
Program to print the following symmetric diamond number pattern:
Example : rows = 4
Expected Output:
1 1 1 1 1 1 1
1 2 2 2 2 2 1
1 2 3 3 3 2 1
1 2 3 4 3 2 1
1 2 3 3 3 2 1
1 2 2 2 2 2 1
1 1 1 1 1 1 1

21. Reverse Diamond Number Pattern
Program to print the following reverse diamond number pattern:
Example : rows = 4
Expected Output:
4 4 4 4 4 4 4
4 3 3 3 3 3 4
4 3 2 2 2 3 4
4 3 2 1 2 3 4
4 3 2 2 2 3 4
4 3 3 3 3 3 4
4 4 4 4 4 4 4


# Superb Questions From Functions
=================================

1. Function to find the smallest number among three given numbers (handle equal numbers appropriately).

2. Function to display factorials of numbers from 1 to a given limit.

3. Function to display Fibonacci numbers from the 0th term to the nth term.

4. Function to compute the sum of digits of a number.

5. Program to compute combinations (nCr).

6. Program to compute permutations (nPr).

7. Program to print Pascal's Triangle up to a given number of rows.
    Example: If number of rows = 5
    1
    1 1
    1 2 1
    1 3 3 1
    1 4 6 4 1
    1 5 10 10 5 1

8. Program to print Center-align Pascal's Triangle up to a given number of rows.
    Example: If number of rows = 5
    _ _ _ _ _ 1
    _ _ _ _ 1 _ 1
    _ _ _ 1 _ 2 _ 1
    _ _ 1 _ 3 _ 3 _ 1
    _ 1 _ 4 _ 6 _ 4 _ 1
    1 _ 5 _ 10 _ 10 _ 5 _ 1

9. Function to swap given parameters and print them using a temporary variable.

10. Function to swap given parameters and print them without using a temporary variable.

11. Function to calculate the result of a base raised to the power of an exponent.

12. Function to compute the Greatest Common Divisor (GCD) of two given numbers.

13. Function to find and display the prime factors of a given number.

14. Function to calculate square root using the Newton-Raphson method.

15. Program to print the first n prime numbers using functions.


# Superb Questions From Recursion
=================================

1. Recursive function to print numbers in decreasing order from x down to 1.

2. Recursive function to print numbers from 1 to N in increasing order.

3. Recursive function to print numbers from 1 to n.

4. Recursive function to print numbers from n down to 1, and then from 1 back up to n.

5. Recursive function to calculate and print the factorial of a given number.

6. Recursive function to calculate 'base' raised to the power 'exponent'.

7. Recursive function to calculate base^exponent using logarithmic time complexity.

8. Recursive function to calculate the nth Fibonacci number.

9. Program to find the number of ways to climb 'n' stairs, where one can take either 1 or 2 steps at a time.

10. Program to find the number of ways to climb 'n' stairs, where one can take 1, 2, or 3 steps at a time.

11. Recursive function to compute the number of distinct paths in a grid from a starting point to an 
    endpoint moving only right or down (parameterized version).

12. Recursive function to compute the total number of unique paths from the top-left corner to the,
    bottom-right corner of a grid with given rows and columns. 
    Only rightward and downward moves are allowed.

13. Write a recursive function to print a Zig-Zag pattern.
    Example:
    Input: 2
    Output: 2 1 1 1 2 1 1 1 2

14. Recursive function to print a Zig-Zag pattern for the first N natural numbers.
    Example: if N=4.
    Input        Output
    1            111
    2            211121112
    3            321112111232111211123
    4            432111211123211121112343211121112321112111234

15. Recursive function to solve the Tower of Hanoi puzzle.


# Superb Questions From Arrays
==============================

1. Program to store the multiplication table of a given number in an array.

2. Program to find the maximum value in a user-defined array using the 'limits.h' library functions.

3. Program to find the minimum value in a user-defined array.

4. Program to find and count all triplets in an array whose sum equals a given target value.

5. Program to store the first 'n' Fibonacci numbers in an array.

6. Program to find the second largest element in an array using various loop structures.

7. Program to find the second largest element in an array using only one loop.

8. Program to reverse an array in-place without using any additional array.

9. Program to check if an array is a palindrome.

10. Program to reverse a subarray between given start and end indices.

11. Program to perform a right rotation on an array using the reversal algorithm. 
    The program should read array elements from the user and rotate the array 'r' times.

12. Program to check whether a given number is present in an array.

13. Program to find the missing number from an array containing numbers from 1 to 20.

14. Program to find a duplicate element in an integer array where all elements appear exactly twice, 
    except one value that appears more than twice.

15. Program to find the unique number in an array where all elements appear exactly twice, 
    except one value that appears only once.


# Superb Questions From 2D Arrays
=================================

1. Program to find the maximum element in a 2D array.

2. Program to calculate the sum of elements in a selected submatrix from a 2D array. The user inputs the matrix dimensions, 
the elements, and the submatrix range.

3. Program to find and print the row number that has the maximum sum in a given matrix.

4. Program to find the row with the maximum number of 1s in a binary matrix.

5. Program to transpose a square matrix (n × n) in-place. (LeetCode-867)
    Example (rows/cols = 3):
    Input Matrix:           Transposed Matrix:
    1   2   3               1   4   7
    4   5   6               2   5   8
    7   8   9               3   6   9

6. Program to rotate a square matrix 90° clockwise in-place using a while loop.
    Example (rows/cols = 3)
    Input Matrix:           90° clockwise rotated Matrix:
    1   2   3               7   4   1
    4   5   6               8   5   2
    7   8   9               9   6   3

7. Program to multiply two matrices entered by the user.

8. In-place program to transform a given matrix (n × m) by reversing elements of every odd-indexed row.
    Example (rows = 3, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               1   2   3   4
    5   6   7   8               8   7   6   5
    9   10  11  12              9   10  11  12

9. Program to print a given matrix (n × m) in even-indexed column-wise wave form.
    Example (rows = 3, cols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               9   5   1
    5   6   7   8               2   6   10
    9   10  11  12              11  7   3
                                4   8   12

10. In-place program to transform a given matrix (n × m) by reversing the order of rows (vertical flip).
    Example (rows = 3, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               9   10  11  12
    5   6   7   8               5   6   7   8
    9   10  11  12              1   2   3   4

11. In-place program to transform a given square matrix (n × n) by reversing elements of every even-indexed column.
    Example (rows = 3, cols = 3):
    Input Matrix:               Transformed Matrix:
    1   2   3                   7   2   9
    4   5   6                   4   5   6
    7   8   9                   1   8   3

12. Program to print a given matrix (n × m) in odd-indexed column-wise wave form.
    Example (rows = 3, cols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               4   8   12
    5   6   7   8               11  7   3
    9   10  11  12              2   6   10
                                9   5   1

13. In-place program to transform a given square matrix (n × n) by reversing elements of every odd-indexed column.
    Example (rows = 4, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               1   8   3   12
    5   6   7   8               5   6   7   8
    9   10  11  12              9   10  11  4
    13  14  15  16              13  2   15  16

14. Given an n × m matrix, print all elements of the matrix in spiral order. (LeetCode-54)
    Example (rows = 5, cols = 6):
    Input Matrix:                        
    1   2   3   4   5   6
    7   8   9   10  11  12
    13  14  15  16  17  18
    19  20  21  22  23  24
    25  26  27  28  29  30

    Output (spiral order):
    1 2 3 4 5 6 12 18 24 30 29 28 27 26 25 19 13 7 8 9 10 11 17 23 22 21 20 14 15 16

15. Give a positive integer n, generate a square(n*n) matrix filled with elements from 1 to n*n in spiral order.
(Leetcode-59)
Example (rows = 5, cols = 6)
Input Matrix:                           Generated Matrix:
1  2   3   4   5   6                    1   2   3   4   5   6
7  8   9   10  11  12                   18  19  20  21  22  7
13 14  15  16  17  18                   17  28  29  30  23  8
19 20  21  22  23  24                   16  27  26  25  24  9
25 26  27  28  29  30                   15  14  13  12  11  10